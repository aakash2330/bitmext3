import { TsymbolData } from "@/lib/validators";
import { atom } from "recoil";

export const symbolAtom = atom<TsymbolData>({
  key: "symbolAtom", // unique ID (with respect to other atoms/selectors)
  default: {
    symbol:"",
    rootSymbol: "",
    state:"",
    typ:"",
    listing:"",
    front:"",
    expiry:"",
    settle:"",
    listedSettle:"",
    underlying:"",
    quoteCurrency:"",
    underlyingSymbol:"",
    reference:"",
    referenceSymbol:"",
    maxOrderQty: 0,
    maxPrice: 0,
    lotSize: 0,
    tickSize: 0,
    multiplier:0,
    settlCurrency:"",
    underlyingToSettleMultiplier: 0,
    isQuanto: true,
    isInverse: true,
    initMargin: 0,
    maintMargin: 0,
    riskLimit: 0,
    riskStep: 0,
    limit: 0,
    taxed: true,
    deleverage: true,
    makerFee: 0,
    takerFee: 0,
    settlementFee: 0,
    prevClosePrice: 0,
    limitDownPrice: 0,
    limitUpPrice: 0,
    prevTotalVolume: 0,
    totalVolume: 0,
    volume: 0,
    volume24h: 0,
    prevTotalTurnover: 0,
    totalTurnover: 0,
    turnover: 0,
    turnover24h: 0,
    homeNotional24h: 0,
    foreignNotional24h: 0,
    prevPrice24h:0,
    lastPrice: 0,
    lastPriceProtected: 0,
    lastTickDirection:"",
    lastChangePcnt: 0,
    hasLiquidity: true,
    openInterest: 0,
    openValue: 0,
    fairBasis: 0,
    fairPrice: 0,
    markMethod:"",
    markPrice: 0,
    indicativeSettlePrice: 0,
    settledPrice: 0,
    instantPnl: true,
    timestamp:"",
    capped: true,
  }, 
});
